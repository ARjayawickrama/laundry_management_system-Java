/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2024-04-20 19:05:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Addmin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: Arial, Helvetica, sans-serif;\r\n");
      out.write("         background: url('images/log2.jpg') no-repeat center center fixed;\r\n");
      out.write("             background-size: 100%; \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    * {\r\n");
      out.write("      box-sizing: border-box;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=text],\r\n");
      out.write("    input[type=password] {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      margin: 5px 0 22px 0;\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      border: none;\r\n");
      out.write("      background: #f1f1f1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=text]:focus,\r\n");
      out.write("    input[type=password]:focus {\r\n");
      out.write("      background-color: #ddd;\r\n");
      out.write("      outline: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("      background-color: #04AA6D;\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 14px 20px;\r\n");
      out.write("      margin: 8px 0;\r\n");
      out.write("      border: none;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      opacity: 0.9;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button:hover {\r\n");
      out.write("      opacity: 1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .cancelbtn {\r\n");
      out.write("      padding: 14px 20px;\r\n");
      out.write("      background-color: #f44336;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .cancelbtn,\r\n");
      out.write("    .signupbtn {\r\n");
      out.write("      float: left;\r\n");
      out.write("      width: 50%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("      width: 500px;\r\n");
      out.write("      padding: 10px;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .modal-content {\r\n");
      out.write("      background-color: #fefefe;\r\n");
      out.write("      width: 80%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    hr {\r\n");
      out.write("      border: 1px solid #f1f1f1;\r\n");
      out.write("      margin-bottom: 25px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .close {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      right: 35px;\r\n");
      out.write("      top: 15px;\r\n");
      out.write("      font-size: 40px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      color: #f1f1f1;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .close:hover,\r\n");
      out.write("    .close:focus {\r\n");
      out.write("      color: #f44336;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* Clear floats */\r\n");
      out.write("    .clearfix::after {\r\n");
      out.write("      content: \"\";\r\n");
      out.write("      clear: both;\r\n");
      out.write("      display: table;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media screen and (max-width: 300px) {\r\n");
      out.write("      .cancelbtn,\r\n");
      out.write("      .signupbtn {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    .modal {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("         left: 50%;\r\n");
      out.write("          top: 25%;\r\n");
      out.write("         transform: translateX(-50%);\r\n");
      out.write("    }\r\n");
      out.write("         .form_link {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            background-color: #3498db; /* Set your desired background color */\r\n");
      out.write("            color: #fff; /* Set your desired text color */\r\n");
      out.write("            border-radius: 5px; /* Optional: Rounded corners */\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form_link:hover {\r\n");
      out.write("            background-color: #2980b9; /* Set your desired hover background color */\r\n");
      out.write("        }\r\n");
      out.write("           /* Form container */\r\n");
      out.write("    .mymain {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      margin: 20px auto;\r\n");
      out.write("      background-color: #fff;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      transition: transform 0.3s ease-in-out;\r\n");
      out.write("     \r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>Login page</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("  <div id=\"id01\" class=\"modal\">\r\n");
      out.write("<div class=\"mymain\">\r\n");
      out.write("\r\n");
      out.write("   <form action=\"AdminLogin\" method=\"post\">\r\n");
      out.write("        <label for=\"Admin_name\">Admin Name:</label>\r\n");
      out.write("        <input type=\"text\" id=\"Admin_name\" name=\"Admin_name\" required><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <label for=\"Admin_password\">Password:</label>\r\n");
      out.write("        <input type=\"password\" id=\"Admin_password\" name=\"Admin_password\" required><br><br>\r\n");
      out.write("        \r\n");
      out.write("        <input type=\"submit\" value=\"Login\">\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("  </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Disable back button\r\n");
      out.write("        function disableBackButton() {\r\n");
      out.write("            history.pushState(null, null, location.href);\r\n");
      out.write("            window.onpopstate = function () {\r\n");
      out.write("                history.go(1);\r\n");
      out.write("            };\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
